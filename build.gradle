plugins {
    id 'java'
    id 'maven-publish'
}

group 'niteknightt.chess'
version '0.1'

repositories {
    mavenCentral()
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/niteknightt/chess_common")
        credentials {
            username = System.getenv("NN_GITHUB_USER")
            password = System.getenv("NN_GITHUB_ACCESS_TOKEN")
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/niteknightt/chess_uciclientmod")
        credentials {
            username = System.getenv("NN_GITHUB_USER")
            password = System.getenv("NN_GITHUB_ACCESS_TOKEN")
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/niteknightt/chess_gameplay")
        credentials {
            username = System.getenv("NN_GITHUB_USER")
            password = System.getenv("NN_GITHUB_ACCESS_TOKEN")
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/niteknightt/chess_lichessapi")
        credentials {
            username = System.getenv("NN_GITHUB_USER")
            password = System.getenv("NN_GITHUB_ACCESS_TOKEN")
        }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'niteknightt.chess:common:0.2.017'
    implementation 'niteknightt.chess:uciclientmod:0.4'
    implementation 'niteknightt.chess:gameplay:0.2.002'
    implementation 'niteknightt.chess:lichessapi:0.2.004'
    implementation 'com.google.code.gson:gson:2.10.1'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/niteknightt/chess_testbot")
            credentials {
                username = System.getenv("NN_GITHUB_USER")
                password = System.getenv("NN_GITHUB_ACCESS_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId='niteknightt.chess'
            artifactId='testbot'
            version='0.2'
            from(components.java)
        }
    }
}

task prepareDirs {
    mustRunAfter clean
    doLast {
        def runtimePath = System.getenv("NN_RUNTIME_FILE_PATH") + File.separator + System.getenv("NN_NITEKNIGHTTBOT_APP_NAME")
        def folder = new File("$runtimePath")

        if( !folder.exists() ) {
            folder.mkdirs()
            mkdir("$runtimePath/settings")
            copy {
                from "resources/niteknighttbot.conf"
                into folder.toPath()
            }
            new File("$runtimePath/settings", "niteknighttbot.conf").text = ""
            mkdir("$runtimePath/appLogs")
            mkdir("$runtimePath/gameLogs")
            mkdir("$runtimePath/uciLogs")
            mkdir("$runtimePath/persistence")
        }
        else {
            folder = new File("$runtimePath/settings")
            if (!folder.exists()) {
                folder.mkdirs()
            }
            copy {
                from "resources/niteknighttbot.conf"
                into folder.toPath()
            }
            folder = new File("$runtimePath/appLogs")
            if (!folder.exists()) {
                folder.mkdirs()
            }
            folder = new File("$runtimePath/gameLogs")
            if (!folder.exists()) {
                folder.mkdirs()
            }
            folder = new File("$runtimePath/uciLogs")
            if (!folder.exists()) {
                folder.mkdirs()
            }
            folder = new File("$runtimePath/persistence")
            if (!folder.exists()) {
                folder.mkdirs()
            }
        }
    }
}

tasks.each {
    if (it != prepareDirs && it != clean) {
        it.dependsOn prepareDirs
    }
}